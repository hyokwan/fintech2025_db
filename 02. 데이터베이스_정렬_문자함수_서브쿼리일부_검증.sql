-- UPPER / LOWER
SELECT  A.*,
	UPPER(A.PRODUCT) AS PRODUCT_UPPER,
	LOWER(A.PRODUCT) AS PRODUCT_LOWER
FROM KOPO_CHANNEL_SEASONALITY_NEW A

-- CONCAT
SELECT DISTINCT B.IDX
FROM 
(
	SELECT  A.*,
			CONCAT( REGIONID, '_',  PRODUCT) AS IDX
	FROM KOPO_CHANNEL_SEASONALITY_NEW A
) B

-- SUBSTR
SELECT 
        A.*,
    SUBSTR(YEARWEEK, 1, 2) as YEAR,
    SUBSTR(YEARWEEK, 3, 4) as YEAR
from kopo_channel_seasonality_new A

-- LPAD/RPAD
SELECT RPAD('A032',10,'*') AS CUSTOMER_CODE
FROM DUAL;

SELECT LPAD( A.CUSTOMERCODE, 10, 0 ) CUSTOMER_CODE
FROM KOPO_CUSTOMERDATA A

-- TRIM
SELECT LENGTH( 'john_doe' ) AS REAL_NAME,
	   LENGTH( '    john_doe   ') AS SECOND_NAME,
	   LENGTH( TRIM('    john_doe   ')) AS THIRD_NAME
FROM DUAL

SELECT *
FROM USERS
WHERE TRIM(username) = 'john_doe'

SELECT *
FROM USERS
WHERE username = 'john_doe'

-- 지역 앞에 A코드가 REGIONID_ 변경 시 
SELECT REPLACE( A.REGIONID, 'A', 'REGIONID_' ) AS REGIONID,
	PRODUCT,
	YEARWEEK,
	QTY
FROM KOPO_CHANNEL_SEASONALITY_NEW A

-- UPPER/LOWER : 대소문자 
-- SUBSTR : 인덱스로 추출
-- LPAD/RPAD: 패딩 좌우 붙이기 (자릿수에 따라)
-- CONCAT : 합치는거
-- TRIM : 공백제거
-- REPLACE : 변경
-- LEFT(...,3),.....XXXXXX

-- KOPO_CUSTOMERDATA의 고객코드는10자리이다
-- 만약 10자리가 아니면 왼쪽에 0으로 채운다
-- 이후 고객코드의 뒷 4자리는 암호화를 위해 * 처리를
-- 해야합니다.

SELECT A.CUSTOMERCODE,
	-- STEP1: 10자리 채우기 왼쪽 0 
	LPAD(A.CUSTOMERCODE,10,'0') AS CSDATA_DIGIT10,
	-- STEP2: 왼쪽 6자리 추출
	SUBSTR(LPAD(A.CUSTOMERCODE,10,'0'), 1, 6) AS CSDATA_DIGIT6,
	-- STEP3: 뒷자리는 ****
	CONCAT(SUBSTR(LPAD(A.CUSTOMERCODE,10,'0'), 1, 6), '****') AS ANSWER
FROM KOPO_CUSTOMERDATA A

SELECT B.* 
FROM
(
SELECT A.CUSTOMERCODE ,
	-- STEP1: 10자리 채우기 왼쪽 0 
	LPAD(A.CUSTOMERCODE,10,'0') AS CSDATA_DIGIT10,
    REPLACE(
            LPAD(A.CUSTOMERCODE, 10, 0),
            SUBSTR(LPAD(A.CUSTOMERCODE, 10,'0'), 7, 4), '****') AS MYANSWER,
	SUBSTR(LPAD(A.CUSTOMERCODE,10,'0'), 1, 6) AS ACTUAL_DATA,
	SUBSTR( REPLACE(
            LPAD(A.CUSTOMERCODE, 10, 0),
            SUBSTR(LPAD(A.CUSTOMERCODE, 10,'0'), 7, 4), '****'),1,6) AS MY_DATA
FROM KOPO_CUSTOMERDATA A
) B
WHERE B.ACTUAL_DATA != B.MY_DATA


















